@page "/AutoComplete"
@using Blazored.Typeahead
@inject ClientServices clientServices

<BlazoredTypeahead SearchMethod="SearchClient" @bind-Value="selectedClient">
    <SelectedTemplate>
        @context.Name @context.LastName
    </SelectedTemplate>
    <ResultTemplate>
        @context.Name @context.LastName
    </ResultTemplate>
</BlazoredTypeahead>

<EditForm Model="selectedClient">
    <InputText type="text" list="txtSearch" placeholder="Seleccione un cliente" @bind-Value="clientId" />
    <datalist id="txtSearch">
        <option value="0"></option>
        @foreach (var item in clients)
        {
            <option value="@item.Id" class="d-none">@item.Name @item.LastName</option>
        }
    </datalist>
</EditForm>


<h1>@selectedClient.Id</h1>
<h2>@selectedClient.Name</h2>
<h2>@selectedClient.LastName</h2>

@code {
    List<Client> clients = new List<Client>();
    string clientId = "";
    Client selectedClient = new Client();

    protected override async Task OnInitializedAsync()
    {
        clients = await clientServices.GetAll();
    }

    protected async Task getOne()
    {
        selectedClient = await clientServices.GetOne(Convert.ToInt32(this.clientId));
    }

    protected async Task<IEnumerable<Client>> SearchClient(string search)
    {
        return await Task.FromResult(clients.Where(c => c.Name.ToLower().Contains(search.ToLower())));
    }
}
